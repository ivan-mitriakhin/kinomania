# Generated by Django 5.1.1 on 2024-09-22 14:25

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Human',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique_for_date='release_date')),
                ('orig_title', models.CharField(max_length=100, unique_for_date='release_date')),
                ('status', models.CharField(choices=[('ANNOUNCED', 'Announced'), ('PRE-PRODUCTION', 'Pre-production'), ('FILMING', 'Filming'), ('POST-PRODUCTION', 'Post-production'), ('COMPLETED', 'Completed'), ('RELEASED', 'Released')], max_length=15)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('revenue', models.PositiveIntegerField(blank=True, default=0)),
                ('budget', models.PositiveIntegerField(blank=True, default=0)),
                ('runtime', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('tagline', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('overview', models.TextField(blank=True, default='', null=True)),
                ('tmdb_id', models.IntegerField(unique=True)),
                ('imdb_id', models.CharField(max_length=10, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cast', models.ManyToManyField(related_name='cast', to='movies.human')),
                ('composers', models.ManyToManyField(related_name='composers', to='movies.human')),
                ('directors', models.ManyToManyField(related_name='directors', to='movies.human')),
                ('dop', models.ManyToManyField(related_name='dop', to='movies.human')),
                ('genres', models.ManyToManyField(to='movies.genre')),
                ('orig_lang', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orig_lang', to='movies.language')),
                ('prod_companies', models.ManyToManyField(related_name='prod_companies', to='movies.company')),
                ('prod_countries', models.ManyToManyField(related_name='prod_countries', to='movies.country')),
                ('producers', models.ManyToManyField(related_name='producers', to='movies.human')),
                ('spoken_langs', models.ManyToManyField(related_name='spoken_langs', to='movies.language')),
                ('writers', models.ManyToManyField(related_name='writers', to='movies.human')),
            ],
        ),
    ]
